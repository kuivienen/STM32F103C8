/**************************************************************************************************
 COMMON.H

 Заголовочный файл модуля COMMON
**************************************************************************************************/

#ifndef __COMMON__

#define __COMMON__

#include <stdint.h>
#include <stdbool.h>
#include <stm32f10x.h>


/**************************************************************************************************
                                            ОПРЕДЕЛЕНИЯ
**************************************************************************************************/



/**************************************************************************************************
                                          ТИПЫ ДАННЫХ
**************************************************************************************************/

typedef enum done_inprogress_enum {RET_DONE, RET_IN_PROGRESS} done_inprogress;
typedef enum ok_fail_enum {RET_OK, RET_FAIL} ok_fail;

typedef done_inprogress (*done_inprogress_func)(void);
typedef void (*callback)( void );


/**************************************************************************************************
                                   ПРОТОТИПЫ ГЛОБАЛЬНЫХ ФУНКЦИЙ
**************************************************************************************************/

void InitIwdg(void);
void SysErrorHandler(void);



/**************************************************************************************************
                                     ГЛОБАЛЬНЫЕ INLINE-ФУНКЦИИ
**************************************************************************************************/

/**************************************************************************************************
Описание:  Возвращает страший байт 16-битного слова
Аргументы: 16-битное слово
Возврат:   Старший байт
Замечания:
**************************************************************************************************/
static inline uint8_t GetH(uint16_t data)
{
    return (uint8_t)(data >> 8);
}



/**************************************************************************************************
Описание:  Возвращает младший байт 16-битного слова
Аргументы: 16-битное слово
Возврат:   Младший байт
Замечания:
**************************************************************************************************/
static inline uint8_t GetL(uint16_t data)
{
    return (uint8_t)(data & 0x00FF);
}



/**************************************************************************************************
Описание:  Возвращает 16-битное слово
Аргументы: Указатель на младший (первый) байт
Возврат:   16-битное слово
Замечания:
**************************************************************************************************/
static inline uint16_t Get16(uint8_t * ptr)
{
	return ( (uint16_t)(*ptr) | ((uint16_t)(*(ptr + 1)) << 8) );
}



/**************************************************************************************************
Описание:  Пропорционально пересчитывает int16_t в int8_t
Аргументы: Значение в int16_t
Возврат:   Значение в int8_t
Замечания:
**************************************************************************************************/
static inline int8_t RescaleInt16ToInt8(int16_t value)
{
	return (int8_t)(value * INT8_MAX / INT16_MAX);
}



/**************************************************************************************************
Описание:  Пропорционально пересчитывает int16_t в int8_t
Аргументы: Значение в int16_t
Возврат:   Значение в int8_t
Замечания:
**************************************************************************************************/
static inline uint8_t RescaleUint16ToUint8(uint16_t value)
{
	return (uint8_t)(value * UINT8_MAX / UINT16_MAX);
}



/**************************************************************************************************
Описание:  Пропорционально пересчитывает int8_t в int16_t
Аргументы: Значение в int8_t
Возврат:   Значение в int16_t
Замечания:
**************************************************************************************************/
static inline int16_t RescaleInt8ToInt16(int8_t value)
{
	return (int16_t)(value * INT16_MAX / INT8_MAX);
}

#endif	/*	__COMMON__	*/
