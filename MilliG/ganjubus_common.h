/**************************************************************************************************
 GANJUBUS_COMMON.H

 Общий заголовочный файл протоколов Ganjubus

**************************************************************************************************/

#ifndef __GANJUBUS_COMMON_H__
#define __GANJUBUS_COMMON_H__



#include <stdint.h>
#include <stdbool.h>


/**************************************************************************************************
                                         АДРЕСА УСТРОЙСТВ
**************************************************************************************************/

#define G_BROADCAST_DEV_ADDRESS 0x00
#define G_DIRECT_DEV_ADDRESS 0xFF



/**************************************************************************************************
                                          КОДЫ ФУНКЦИЙ
**************************************************************************************************/

#define G_FCODE_WRITE_SINGLE_REG       1   // Записать одиночный регистр
#define G_FCODE_WRITE_REGS_RANGE       2   // Записать диапазон регистров
#define G_FCODE_WRITE_REGS_SERIES      3   // Записать серию разрозненных регистров
#define G_FCODE_READ_SINGLE_REG        4   // Считать одиночный регистр
#define G_FCODE_READ_REGS_RANGE        5   // Считать диапазон регистров
#define G_FCODE_READ_REGS_SERIES       6   // Считать разрозненные регистры



/**************************************************************************************************
                                         КОДЫ ОШИБОК
**************************************************************************************************/

#define G_ERRCODE_WRONG_GBYTE          1   // Неверный G-байт (код функции + ACK-код)
#define G_ERRCODE_WRONG_ADDRESS        2   // Неверный адрес регистра
#define G_ERRCODE_WRONG_BYTES_NUM      3   // Ошибочное количество данных
#define G_ERRCODE_UNABLE_TO_EXECUTE    4   // Невозможно выполнить команду



/**************************************************************************************************
                                          ACK-КОДЫ
**************************************************************************************************/

#define G_ACK                          0xA0 // ACK
#define G_NACK                         0xE0 // NACK
#define G_REQ                          0x00 // REQUEST



/**************************************************************************************************
                                     ГЛОБАЛЬНЫЕ INLINE-ФУНКЦИИ
**************************************************************************************************/

/**************************************************************************************************
Описание:  Генерация G-байта
Аргументы: F-код, ACK/NACK
Возврат:   G-байт
Замечания:
**************************************************************************************************/
static inline uint8_t G_MakeGbyte(uint8_t fCode, uint8_t ackCode)
{
	return (fCode & 0x0F) | (ackCode & 0xF0);
} 



/**************************************************************************************************
Описание:  Получение F-кода из G-байта
Аргументы: G-байт
Возврат:   F-код
Замечания:
**************************************************************************************************/
static inline uint8_t G_GetFcode(uint8_t gByte)
{
	return gByte & 0x0F;
}



/**************************************************************************************************
Описание:  Получение Ack-кода из G-байта
Аргументы: G-байт
Возврат:   Ack-код
Замечания:
**************************************************************************************************/
static inline uint8_t G_GetAckCode(uint8_t gByte)
{
	return gByte & 0xF0;
}

#endif		/* __GANJUBUS_COMMON_H__ */

